# NOTE: This file is generated by yotta: changes will be overwritten!


project(compiler-polyfill)


# include root directories of all components we depend on (directly and
# indirectly, including ourself)
include_directories("/Users/jacobrosenthal/Downloads/mbed-hr-observer")
include_directories("/Users/jacobrosenthal/Downloads/mbed-hr-observer/yotta_modules/compiler-polyfill")


# recurse into dependencies that aren't built elsewhere




# modules with custom CMake build systems may append to the
# YOTTA_GLOBAL_INCLUDE_DIRS property to add compile-time-determined include
# directories:
get_property(GLOBAL_INCLUDE_DIRS GLOBAL PROPERTY YOTTA_GLOBAL_INCLUDE_DIRS)
include_directories(${GLOBAL_INCLUDE_DIRS})

# Provide versions of all the components we depend on, the corresponding
# preprocessor definitions are generated in yotta_config.h
set(YOTTA_COMPILER_POLYFILL_VERSION_STRING "1.1.1")
set(YOTTA_COMPILER_POLYFILL_VERSION_MAJOR 1)
set(YOTTA_COMPILER_POLYFILL_VERSION_MINOR 1)
set(YOTTA_COMPILER_POLYFILL_VERSION_PATCH 1)

# provide the name of the current module so that it's available to custom CMake
# even if custom CMake does weird things with project()
set(YOTTA_MODULE_NAME compiler-polyfill)

# recurse into subdirectories for this component, using the two-argument
# add_subdirectory because the directories referred to here exist in the source
# tree, not the working directory
add_subdirectory(
    "/Users/jacobrosenthal/Downloads/mbed-hr-observer/yotta_modules/compiler-polyfill/test"
    "${CMAKE_BINARY_DIR}/ym/compiler-polyfill/test"
)
add_subdirectory(
    "/Users/jacobrosenthal/Downloads/mbed-hr-observer/build/tinyble-gcc/ym/compiler-polyfill/yotta_dummy_lib_compiler_polyfill"
    "${CMAKE_BINARY_DIR}/ym/compiler-polyfill/yotta_dummy_lib_compiler_polyfill"
)

# (not setting YOTTA_MODULE_NAME preprocessor definition as this module doesn't
# have any sources to build)

# include .cmake files provided by the target:
include("/Users/jacobrosenthal/Downloads/mbed-hr-observer/yotta_targets/mbed-gcc/coverage/coverage.cmake")
